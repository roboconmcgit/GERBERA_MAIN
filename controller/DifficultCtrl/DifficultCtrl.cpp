/**
 ******************************************************************************
 ** ファイル名 : DifficultCtrl.cpp
 **
 ** 概要 : DifficultCtrlクラス
 **
 ** 注記 : 各種初期パラメータは_prmファイル参照
 ******************************************************************************
 **/

#include "DifficultCtrl.h"

#define DEBUG

#ifdef DEBUG
#define _debug(x) (x)
#else
#define _debug(x)
#endif

//*****************************************************************************
// 関数名 : コンストラクタ
// 引数 : unused
// 返り値 : なし
// 概要 : 
//*****************************************************************************
DifficultCtrl::DifficultCtrl(CruiseCtrl* Cruise)
:gCruiseCtrl(Cruise)
{

}

//*****************************************************************************
// 関数名 : デストラクタ
// 引数 : unused
// 返り値 : なし
// 概要 : 
//*****************************************************************************
DifficultCtrl::~DifficultCtrl(){

}

//*****************************************************************************
// 関数名 : 
// 引数 : unused
// 返り値 : なし
// 概要 : 
//*****************************************************************************
void DifficultCtrl::init(){
}

//*****************************************************************************
// 関数名 : 
// 引数 : unused
// 返り値 : なし
// 概要 : 
//*****************************************************************************
int DifficultCtrl::StartDashRunner(){
    return 0;
}

//*****************************************************************************
// 関数名 : 
// 引数 : unused
// 返り値 : なし
// 概要 : 
//*****************************************************************************
int DifficultCtrl::GarageRunner(int line_value_lug, float mOdo, float angle,int line_value){
    return 0;
}

//*****************************************************************************
// 関数名 : 
// 引数 : unused
// 返り値 : なし
// 概要 : 
//*****************************************************************************
int DifficultCtrl::StopRobo(
    int &forward,
    float &yawratecmd,
    float &anglecommand,
    bool &tail_stand_mode
){
    forward =  0;
    yawratecmd = 0.0;
    return 1;
}
